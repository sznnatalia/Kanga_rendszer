/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kangagui;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.swing.JRViewer;

import org.hibernate.Session;
import pojos.Hordozo;
import pojos.Tag;

/**
 *
 * @author Droti
 */
public class LekerdezesDialog extends javax.swing.JDialog {

    boolean hordozokKivalaszt;
    boolean tagokKivalaszt;
    List<String> gyartok;
    List<String> tipusok;
    List<Hordozo> hordozok;

    List<String> meretek;
    List<Tag> tagok;

    public LekerdezesDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        setTitle("Lekérdezés");
        setLocationRelativeTo(null);

        JelentesPanel.setVisible(false);

        HordozokPanel.setVisible(false);
        TagokPanel.setVisible(false);
        hordozokKivalaszt = false;
        tagokKivalaszt = false;

        Session session = hibernate.HibernateUtil.getSessionFactory().openSession();
        hordozok = session.createQuery("FROM Hordozo").list();
        tagok = session.createQuery("FROM Tag").list();
        session.close();

        Set<String> gyartokSet = new HashSet<>();
        Set<String> tipusokSet = new HashSet<>();
        Set<String> meretSet = new HashSet<>();

        for (Hordozo h : hordozok) {
            gyartokSet.add(h.getGyarto());
            tipusokSet.add(h.getTipus());
            meretSet.add(h.getMeret());
        }

        gyartok = new ArrayList<>(gyartokSet);
        tipusok = new ArrayList<>(tipusokSet);
        meretek = new ArrayList<>(meretSet);

        gyartok.add(0, "Nincsen gyártó kiválasztva");
        tipusok.add(0, "Nincsen típus kiválasztva");
        meretek.add(0, "Nincsen méret kiválasztva");

        cbGyarto.setModel(new DefaultComboBoxModel(gyartok.toArray()));
        cbTipus.setModel(new DefaultComboBoxModel(tipusok.toArray()));
        cbMeret.setModel(new DefaultComboBoxModel(meretek.toArray()));

        btOK.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LekerdezesGroup = new javax.swing.ButtonGroup();
        KolcsonozveGroup = new javax.swing.ButtonGroup();
        TagokGroup = new javax.swing.ButtonGroup();
        jelentesDialog = new javax.swing.JDialog();
        btMegsem = new javax.swing.JButton();
        btOK = new javax.swing.JButton();
        rbTagok = new javax.swing.JRadioButton();
        rbHordozok = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        HordozokPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbGyarto = new javax.swing.JComboBox<>();
        cbTipus = new javax.swing.JComboBox<>();
        rbKolcsonozve = new javax.swing.JRadioButton();
        rbBent = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        cbMeret = new javax.swing.JComboBox<>();
        rbMindkettKolcsonozve = new javax.swing.JRadioButton();
        TagokPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        rbVanEszkoz = new javax.swing.JRadioButton();
        rbNincsEszkoz = new javax.swing.JRadioButton();
        rbMindketto = new javax.swing.JRadioButton();
        JelentesPanel = new javax.swing.JPanel();

        javax.swing.GroupLayout jelentesDialogLayout = new javax.swing.GroupLayout(jelentesDialog.getContentPane());
        jelentesDialog.getContentPane().setLayout(jelentesDialogLayout);
        jelentesDialogLayout.setHorizontalGroup(
            jelentesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jelentesDialogLayout.setVerticalGroup(
            jelentesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btMegsem.setText("Mégsem");
        btMegsem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMegsemActionPerformed(evt);
            }
        });

        btOK.setText("Lekérdezés");
        btOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOKActionPerformed(evt);
            }
        });

        LekerdezesGroup.add(rbTagok);
        rbTagok.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbTagok.setText("Tagok");
        rbTagok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTagokActionPerformed(evt);
            }
        });

        LekerdezesGroup.add(rbHordozok);
        rbHordozok.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbHordozok.setText("Hordozók");
        rbHordozok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbHordozokActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Lekérdezés tárgya:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Hordozók lekérdezése");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Gyártó szerint");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Típus szerint");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Státusz szerint");

        cbGyarto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbTipus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        KolcsonozveGroup.add(rbKolcsonozve);
        rbKolcsonozve.setText("Kikölcsönözve");

        KolcsonozveGroup.add(rbBent);
        rbBent.setText("Bent");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Méret szerint");

        cbMeret.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        KolcsonozveGroup.add(rbMindkettKolcsonozve);
        rbMindkettKolcsonozve.setText("Mindkettő");
        rbMindkettKolcsonozve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMindkettKolcsonozveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HordozokPanelLayout = new javax.swing.GroupLayout(HordozokPanel);
        HordozokPanel.setLayout(HordozokPanelLayout);
        HordozokPanelLayout.setHorizontalGroup(
            HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HordozokPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addGroup(HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, HordozokPanelLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(47, 47, 47)
                            .addComponent(rbKolcsonozve)
                            .addGap(18, 18, 18)
                            .addComponent(rbBent, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbMindkettKolcsonozve))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, HordozokPanelLayout.createSequentialGroup()
                            .addGroup(HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel7))
                            .addGap(65, 65, 65)
                            .addGroup(HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbGyarto, 0, 228, Short.MAX_VALUE)
                                .addComponent(cbTipus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbMeret, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(289, Short.MAX_VALUE))
        );
        HordozokPanelLayout.setVerticalGroup(
            HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HordozokPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addGroup(HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbGyarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbTipus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbMeret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(HordozokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rbKolcsonozve)
                    .addComponent(rbBent)
                    .addComponent(rbMindkettKolcsonozve))
                .addGap(48, 48, 48))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Lekérdezendő tagok");

        TagokGroup.add(rbVanEszkoz);
        rbVanEszkoz.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbVanEszkoz.setText("Van nála kölcsönzött eszköz");
        rbVanEszkoz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbVanEszkozActionPerformed(evt);
            }
        });

        TagokGroup.add(rbNincsEszkoz);
        rbNincsEszkoz.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbNincsEszkoz.setText("Nincs nála kölcsönzött eszköz");

        TagokGroup.add(rbMindketto);
        rbMindketto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbMindketto.setText("Mindkettő");

        javax.swing.GroupLayout TagokPanelLayout = new javax.swing.GroupLayout(TagokPanel);
        TagokPanel.setLayout(TagokPanelLayout);
        TagokPanelLayout.setHorizontalGroup(
            TagokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TagokPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(TagokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbMindketto)
                    .addComponent(rbNincsEszkoz)
                    .addComponent(rbVanEszkoz)
                    .addComponent(jLabel6))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        TagokPanelLayout.setVerticalGroup(
            TagokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TagokPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(rbVanEszkoz)
                .addGap(27, 27, 27)
                .addComponent(rbNincsEszkoz)
                .addGap(31, 31, 31)
                .addComponent(rbMindketto)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        JelentesPanel.setMinimumSize(new java.awt.Dimension(400, 400));
        JelentesPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(rbTagok)
                        .addGap(45, 45, 45)
                        .addComponent(rbHordozok))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TagokPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btOK)
                            .addComponent(btMegsem))))
                .addContainerGap(464, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(HordozokPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 209, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(433, 433, 433)
                    .addComponent(JelentesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btMegsem, btOK});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbTagok)
                    .addComponent(rbHordozok)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(TagokPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(btOK)
                .addGap(18, 18, 18)
                .addComponent(btMegsem)
                .addGap(20, 20, 20))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(93, Short.MAX_VALUE)
                    .addComponent(HordozokPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(128, 128, 128)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(JelentesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbHordozokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbHordozokActionPerformed
        if (rbHordozok.isSelected()) {
            hordozokKivalaszt = true;
            tagokKivalaszt = false;
            TagokPanel.setVisible(false);
            HordozokPanel.setVisible(true);
            btOK.setEnabled(true);
        }
    }//GEN-LAST:event_rbHordozokActionPerformed

    private void rbTagokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTagokActionPerformed
        if (rbTagok.isSelected()) {
            tagokKivalaszt = true;
            hordozokKivalaszt = false;
            HordozokPanel.setVisible(false);
            TagokPanel.setVisible(true);
            btOK.setEnabled(true);

        }     }//GEN-LAST:event_rbTagokActionPerformed

    private void btMegsemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMegsemActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btMegsemActionPerformed

    private void btOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOKActionPerformed

        if (tagokKivalaszt) {
            tagokLekerdezes();
        } else if (hordozokKivalaszt) {
            hordozokLekerdezes();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Nem választott lekérdezési opciót", "Figyelmeztetés", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btOKActionPerformed

    private void rbMindkettKolcsonozveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMindkettKolcsonozveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMindkettKolcsonozveActionPerformed

    private void rbVanEszkozActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbVanEszkozActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbVanEszkozActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LekerdezesDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LekerdezesDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LekerdezesDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LekerdezesDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LekerdezesDialog dialog = new LekerdezesDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HordozokPanel;
    private javax.swing.JPanel JelentesPanel;
    private javax.swing.ButtonGroup KolcsonozveGroup;
    private javax.swing.ButtonGroup LekerdezesGroup;
    private javax.swing.ButtonGroup TagokGroup;
    private javax.swing.JPanel TagokPanel;
    private javax.swing.JButton btMegsem;
    private javax.swing.JButton btOK;
    private javax.swing.JComboBox<String> cbGyarto;
    private javax.swing.JComboBox<String> cbMeret;
    private javax.swing.JComboBox<String> cbTipus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JDialog jelentesDialog;
    private javax.swing.JRadioButton rbBent;
    private javax.swing.JRadioButton rbHordozok;
    private javax.swing.JRadioButton rbKolcsonozve;
    private javax.swing.JRadioButton rbMindkettKolcsonozve;
    private javax.swing.JRadioButton rbMindketto;
    private javax.swing.JRadioButton rbNincsEszkoz;
    private javax.swing.JRadioButton rbTagok;
    private javax.swing.JRadioButton rbVanEszkoz;
    // End of variables declaration//GEN-END:variables

    private void tagokLekerdezes() {
        List<Tag> tagokSzukitettLista = new ArrayList<>();//leszűkíti a listát a választott opció alapján (van/nincs nála eszköz)
        String allapot = "Minden tag";
        for (Tag t : tagok) {
            if (t.getId() != 0) {//0-ás id-jú tagot nem teszi bele (==klub)
                if (rbVanEszkoz.isSelected()) {
                    allapot = "Van nála kölcsönzött eszköz";
                    if (!t.getHordozos().isEmpty()) {
                        tagokSzukitettLista.add(t);
                    }
                } else if (rbNincsEszkoz.isSelected()) {
                    allapot = "Nincsen nála kölcsönzött eszköz";
                    if (t.getHordozos().isEmpty()) {
                        tagokSzukitettLista.add(t);
                    }
                } else {

                    tagokSzukitettLista.add(t);
                }
            }
        }

        try {
            JasperReport jr = JasperCompileManager.compileReport("tagok.jrxml");

            Map<String, Object> params = new HashMap<>();
            params.put("allapot", allapot);

            JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(tagokSzukitettLista);
            JasperPrint jp = JasperFillManager.fillReport(jr, params, ds);
            JRViewer jv = new JRViewer(jp);
            JelentesPanel.add(jv, BorderLayout.CENTER);

            JelentesPanel.setVisible(true);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(rootPane, ex, "Fájl hiba", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void hordozokLekerdezes() {

        String gyarto = (String) cbGyarto.getSelectedItem();
        String meret = (String) cbMeret.getSelectedItem();
        String tipus = (String) cbTipus.getSelectedItem();
        String allapot = "Nincsen állapot kiválasztva";
        String nincsGyarto = "Nincsen gyártó kiválasztva";
        String nincsMeret = "Nincsen méret kiválasztva";
        String nincsTipus = "Nincsen típus kiválasztva";

        List<Hordozo> hordozoLista = hordozok;

        Session session = hibernate.HibernateUtil.getSessionFactory().openSession();

        if (!gyarto.equals(nincsGyarto) && meret.equals(nincsMeret) && tipus.equals(nincsTipus)) {
            hordozoLista = session.createQuery("FROM Hordozo WHERE gyarto LIKE :par1").setString("par1", gyarto).list();
        } else if (gyarto.equals(nincsGyarto) && !meret.equals(nincsMeret) && tipus.equals(nincsTipus)) {
            hordozoLista = session.createQuery("FROM Hordozo WHERE meret LIKE :par1").setString("par1", meret).list();
        } else if (gyarto.equals(nincsGyarto) && meret.equals(nincsMeret) && !tipus.equals(nincsTipus)) {
            hordozoLista = session.createQuery("FROM Hordozo WHERE tipus LIKE :par1").setString("par1", tipus).list();
        } else if (!gyarto.equals(nincsGyarto) && meret.equals(nincsMeret) && !tipus.equals(nincsTipus)) {
            hordozoLista = session.createQuery("FROM Hordozo WHERE gyarto LIKE :par1 AND tipus LIKE :par2").setString("par1", gyarto).setString("par2", tipus).list();
        } else if (!gyarto.equals(nincsGyarto) && !meret.equals(nincsMeret) && tipus.equals(nincsTipus)) {
            hordozoLista = session.createQuery("FROM Hordozo WHERE gyarto LIKE :par1 AND meret LIKE :par2").setString("par1", gyarto).setString("par2", meret).list();
        } else if (gyarto.equals(nincsGyarto) && !meret.equals(nincsMeret) && !tipus.equals(nincsTipus)) {
            hordozoLista = session.createQuery("FROM Hordozo WHERE meret LIKE :par1 AND tipus LIKE :par2").setString("par1", meret).setString("par2", tipus).list();
        } else if (!gyarto.equals(nincsGyarto) && !meret.equals(nincsMeret) && !tipus.equals(nincsTipus)) {
            hordozoLista = session.createQuery("FROM Hordozo WHERE meret LIKE :par1 AND tipus LIKE :par2 AND meret LIKE :par3").setString("par1", meret).setString("par2", tipus).setString("par3", meret).list();
        }

        session.close();

        List<Hordozo> hordozoSzukitettLista = new ArrayList<>();//ebbe a listába kerülnek a kölcsönzés/nem kölcsönzés alapján szűkített elemek

        for (int i = 0; i < hordozoLista.size(); i++) {

            Hordozo h = hordozoLista.get(i);
            if (rbBent.isSelected()) {
                allapot = "Bent";
                if (h.getTag().getId() == 0) {
                    hordozoSzukitettLista.add(h);
                }
            } else if (rbKolcsonozve.isSelected()) {
                allapot = "Kikölcsönözve";
                if (h.getTag().getId() != 0) {
                    hordozoSzukitettLista.add(h);
                }
            } else {
                hordozoSzukitettLista.add(h);
            }

        }

        try {
            JasperReport jr = JasperCompileManager.compileReport("hordozok.jrxml");

            Map<String, Object> params = new HashMap<>();
            params.put("gyarto", gyarto);
            params.put("meret", meret);
            params.put("tipus", tipus);
            params.put("allapot", allapot);

            JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(hordozoSzukitettLista);
            JasperPrint jp = JasperFillManager.fillReport(jr, params, ds);
            JRViewer jv = new JRViewer(jp);
            JelentesPanel.add(jv, BorderLayout.CENTER);

            JelentesPanel.setVisible(true);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(rootPane, ex, "Fájl hiba", JOptionPane.ERROR_MESSAGE);
        }

    }

}
