/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kangagui;

import comparator.HataridoComparator;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import org.hibernate.Session;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Properties;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Transport;

import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import pojos.Hordozo;

/**
 *
 * @author Droti
 */
public class EmlekeztetoDialog extends javax.swing.JDialog {

    List<Hordozo> hordozok;
    java.awt.Frame parent;
    private Properties prop;
    private javax.mail.Session mailSession;
    String emailcim;
    String jelszo;
    

    public EmlekeztetoDialog(java.awt.Frame parent, boolean modal, String emailcim, String jelszo) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.parent = parent;
        this.emailcim = emailcim;
        this.jelszo = jelszo;

        prop = new Properties();
        try {
            prop.load(new FileReader("D://Nati//Java tanfolyam//Prog//mail.ini"));

        } catch (FileNotFoundException ex) {
            System.out.println(ex);
        } catch (IOException ex) {
            System.out.println(ex);
        }

        Session session = hibernate.HibernateUtil.getSessionFactory().openSession();
        hordozok = session.createQuery("FROM Hordozo as h WHERE h.tag.id!=0").list();
        session.close();

        Collections.sort(hordozok, new HataridoComparator());

        DefaultTableModel dtm = (DefaultTableModel) tblHordozok.getModel();

        dtm.getDataVector().clear();

        for (Hordozo h : hordozok) {
            Vector sor = new Vector();

            sor.add(h.getNev());
            sor.add(h.getGyarto());
            sor.add(h.getTag().getNev());
            sor.add(h.getKolcsonzesiHatarido());

            dtm.addRow(sor);
        }
        dtm.fireTableDataChanged();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHordozok = new javax.swing.JTable();
        btKivalaszt = new javax.swing.JButton();
        btVissza = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        taUzenet = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfCimzett = new javax.swing.JTextField();
        btKuldes = new javax.swing.JButton();
        btSablonModosit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        datePicker = new com.github.lgooddatepicker.components.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        tfTargy = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblHordozok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Hordozó neve", "Gyártó", "Kölcsönző", "Határidő"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHordozok);

        btKivalaszt.setText("Kiválasztás");
        btKivalaszt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKivalasztActionPerformed(evt);
            }
        });

        btVissza.setText("Vissza a főmenüre");
        btVissza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVisszaActionPerformed(evt);
            }
        });

        taUzenet.setColumns(20);
        taUzenet.setRows(5);
        jScrollPane2.setViewportView(taUzenet);

        jLabel1.setText("Üzenet");

        jLabel2.setText("Címzett");

        btKuldes.setText("Üzenet küldése");
        btKuldes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKuldesActionPerformed(evt);
            }
        });

        btSablonModosit.setText("Sablon módosítása");
        btSablonModosit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSablonModositActionPerformed(evt);
            }
        });

        jLabel3.setText("Következő klubalkalom:");

        jLabel4.setText("Tárgy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btKuldes)
                            .addComponent(btSablonModosit, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btVissza)
                            .addComponent(btKivalaszt))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(41, 41, 41)
                        .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCimzett)
                            .addComponent(tfTargy))
                        .addGap(341, 341, 341))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btKivalaszt, btKuldes, btSablonModosit, btVissza});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btKivalaszt)
                        .addGap(39, 39, 39)
                        .addComponent(btVissza))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfCimzett, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfTargy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btKuldes)
                        .addGap(33, 33, 33)
                        .addComponent(btSablonModosit))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btKivalasztActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKivalasztActionPerformed

        int sor = tblHordozok.getSelectedRow();

        if (sor == -1) {
            JOptionPane.showMessageDialog(rootPane, "Nem választott ki sort", "Figyelmeztetés", JOptionPane.WARNING_MESSAGE);
        } else {
            Hordozo selected = (Hordozo) hordozok.get(sor);
            tfCimzett.setText(selected.getTag().getEmail());
            taUzenet.setText(uzenetSzoveg(selected));
            tfTargy.setText("Emlekezteto hordozo kolcsonzesrol");

        }

    }//GEN-LAST:event_btKivalasztActionPerformed

    private void btVisszaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVisszaActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btVisszaActionPerformed

    private void btKuldesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKuldesActionPerformed
        try {
            mailSession = javax.mail.Session.getDefaultInstance(prop, new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(emailcim, jelszo); //To change body of generated methods, choose Tools | Templates.
                }

            });

            MimeMessage message = new MimeMessage(mailSession);
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(tfCimzett.getText()));
            String uzenetHTML = uzenetHTML(taUzenet.getText());
            message.setSubject(tfTargy.getText(), "UTF-8");
            message.setContent(uzenetHTML, "text/html; charset=UTF-8");
            Transport.send(message);

            JOptionPane.showMessageDialog(parent, "Az üzenet sikeresen elküldve", "Értesítés", JOptionPane.INFORMATION_MESSAGE);

        } catch (AddressException ex) {
            JOptionPane.showMessageDialog(parent, "Hibásan megadott e-mail cím", "Figyelmeztetés", JOptionPane.WARNING_MESSAGE);
        } catch (MessagingException ex) {
            JOptionPane.showMessageDialog(parent, "Hiba a levélküldés során", "Sikertelen levélküldés", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btKuldesActionPerformed

    private void btSablonModositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSablonModositActionPerformed
        SablonSzerkesztoDialog ssd = new SablonSzerkesztoDialog(parent, true);
        ssd.setVisible(true);
    }//GEN-LAST:event_btSablonModositActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btKivalaszt;
    private javax.swing.JButton btKuldes;
    private javax.swing.JButton btSablonModosit;
    private javax.swing.JButton btVissza;
    private com.github.lgooddatepicker.components.DatePicker datePicker;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea taUzenet;
    private javax.swing.JTable tblHordozok;
    private javax.swing.JTextField tfCimzett;
    private javax.swing.JTextField tfTargy;
    // End of variables declaration//GEN-END:variables

    private String uzenetSzoveg(Hordozo selected) {
        String uzenetSzoveg = "";
        
        List<String> sorok = new ArrayList<>();
        try {

            try (BufferedReader br = new BufferedReader(new FileReader("szoveg.txt"))) {

                String sor;
                while ((sor = br.readLine()) != null) {
                    sorok.add(sor);
                }
            }

        } catch (FileNotFoundException ex) {
            System.out.println(ex);
        } catch (IOException ex) {
            System.out.println(ex);
        }

        for (int i = 0; i < sorok.size(); i++) {
            String sor = sorok.get(i);
            sor = sor.replaceAll("<hordozo>", (selected.getGyarto() + " " + selected.getNev()));
            LocalDate date = datePicker.getDate();
            if (date != null) {
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy.MM.dd");
                String datum = date.format(formatter);
                sor = sor.replaceAll("<datum>", datum).replaceAll("<kovetkezo>", "");
            } else if (sor.contains("<kovetkezo>")) {
                sor = "";

            }

            sorok.set(i, sor);

        }

        for (String s : sorok) {
            uzenetSzoveg += (s + "\n");
            
        }
        
        return uzenetSzoveg;

    }
    
    public String uzenetHTML(String uzenet){
        return uzenet.replaceAll("\n", "<br/>");
    }

}
