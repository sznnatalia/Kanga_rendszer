/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kangagui;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.hibernate.Session;
import pojos.Hordozo;
import pojos.Tag;

/**
 *
 * @author Droti
 */
public class HordozoAdatokDialog extends javax.swing.JDialog {

    List<Hordozo> hordozok;
    Hordozo hordozo;
    Set<String> gyartokSet;
    Set<String> tipusokSet;
    Set<String> meretekSet;
    boolean mentes;
    Tag kanga;
    File kep;

    public HordozoAdatokDialog(java.awt.Frame parent, boolean modal, Hordozo hordozo) {
        super(parent, modal);
        initComponents();

        setTitle("Hordozó adatok");
        setLocationRelativeTo(null);

        listaFrissit();

        lbKep.setForeground(Color.DARK_GRAY);

        mentes = false;

        Session session = hibernate.HibernateUtil.getSessionFactory().openSession();
        List<Tag> tagok = session.createQuery("FROM Tag").list();
        session.close();

        for (Tag tag : tagok) {
            if (tag.getId() == 0) {
                kanga = tag;
                break;
            }
        }

        if (hordozo != null) {
            this.hordozo = hordozo;
            tfNev.setText(this.hordozo.getNev());
            tfMegjegyzes.setText(this.hordozo.getMegjegyzes());
            cbGyarto.setSelectedItem(hordozo.getGyarto());
            cbMeret.setSelectedItem(hordozo.getMeret());
            cbTipus.setSelectedItem(hordozo.getTipus());
            if (hordozo.getKep() != null) {

                try {
                    kep = new File(hordozo.getKep());
                    ImageIcon ujKep = new ImageIcon(scaleImage(180, 180, ImageIO.read(new File(kep.getAbsolutePath()))));//get the image from file chooser and scale it to match JLabel size
                    lbKep.setIcon(ujKep);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Fájl hiba", "Figyelmeztetés", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            this.hordozo = new Hordozo();
            this.hordozo.setTag(kanga);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btFeltoltes = new javax.swing.JButton();
        tfNev = new javax.swing.JTextField();
        cbTipus = new javax.swing.JComboBox();
        cbMeret = new javax.swing.JComboBox();
        tfMegjegyzes = new javax.swing.JTextField();
        tbMentes = new javax.swing.JButton();
        btMegsem = new javax.swing.JButton();
        cbGyarto = new javax.swing.JComboBox();
        btUjGyarto = new javax.swing.JButton();
        btUjTipus = new javax.swing.JButton();
        btUjMeret = new javax.swing.JButton();
        lbKep = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Név");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Gyártó");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Típus");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Méret");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Megjegyzés");

        btFeltoltes.setText("Kép feltöltése");
        btFeltoltes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFeltoltesActionPerformed(evt);
            }
        });

        cbTipus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbMeret.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tbMentes.setText("Mentés");
        tbMentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbMentesActionPerformed(evt);
            }
        });

        btMegsem.setText("Mégsem");
        btMegsem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMegsemActionPerformed(evt);
            }
        });

        cbGyarto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btUjGyarto.setText("Új gyártó");
        btUjGyarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUjGyartoActionPerformed(evt);
            }
        });

        btUjTipus.setText("Új típus");
        btUjTipus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUjTipusActionPerformed(evt);
            }
        });

        btUjMeret.setText("Új méret");
        btUjMeret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUjMeretActionPerformed(evt);
            }
        });

        lbKep.setBackground(new java.awt.Color(102, 102, 102));
        lbKep.setForeground(new java.awt.Color(102, 102, 102));
        lbKep.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbKep.setText("Kép helye");
        lbKep.setPreferredSize(new java.awt.Dimension(180, 180));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfNev, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbTipus, javax.swing.GroupLayout.Alignment.LEADING, 0, 318, Short.MAX_VALUE)
                                    .addComponent(cbMeret, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfMegjegyzes)
                                    .addComponent(cbGyarto, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(tbMentes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btUjGyarto)
                            .addComponent(btUjTipus)
                            .addComponent(btUjMeret)
                            .addComponent(btMegsem, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btFeltoltes)
                        .addGap(36, 36, 36)
                        .addComponent(lbKep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(272, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btUjGyarto, btUjMeret, btUjTipus});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfNev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbGyarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUjGyarto))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbTipus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUjTipus))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbMeret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUjMeret))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfMegjegyzes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btFeltoltes)
                    .addComponent(lbKep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbMentes)
                    .addComponent(btMegsem))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btUjGyartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUjGyartoActionPerformed
        String gyarto = JOptionPane.showInputDialog(rootPane, "Adja meg az új gyártót", "Új gyártó", JOptionPane.DEFAULT_OPTION);
        if (gyarto != null) {
            gyartokSet.add(gyarto);
            cbGyarto.setModel(new DefaultComboBoxModel(new ArrayList(gyartokSet).toArray()));
            cbGyarto.setSelectedItem(gyarto);
        }

    }//GEN-LAST:event_btUjGyartoActionPerformed

    private void btUjTipusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUjTipusActionPerformed
        String tipus = JOptionPane.showInputDialog(rootPane, "Adja meg az új típust", "Új típus", JOptionPane.DEFAULT_OPTION);
        if (tipus != null) {
            tipusokSet.add(tipus);
            cbTipus.setModel(new DefaultComboBoxModel(new ArrayList(tipusokSet).toArray()));
            cbTipus.setSelectedItem(tipus);
        }
    }//GEN-LAST:event_btUjTipusActionPerformed

    private void btUjMeretActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUjMeretActionPerformed
        String meret = JOptionPane.showInputDialog(rootPane, "Adja meg az új méretet", "Új méret", JOptionPane.DEFAULT_OPTION);
        if (meret != null) {
            meretekSet.add(meret);
            cbMeret.setModel(new DefaultComboBoxModel(new ArrayList(meretekSet).toArray()));
            cbMeret.setSelectedItem(meret);
        }
    }//GEN-LAST:event_btUjMeretActionPerformed

    private void tbMentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbMentesActionPerformed
        mentes = true;
        hordozo.setNev(tfNev.getText());
        hordozo.setGyarto((String) cbGyarto.getSelectedItem());
        hordozo.setMeret((String) cbMeret.getSelectedItem());
        hordozo.setTipus((String) cbTipus.getSelectedItem());
        hordozo.setMegjegyzes(tfMegjegyzes.getText());
        
        if(kep.getAbsolutePath()!=null){

        try (InputStream is = new FileInputStream(kep.getAbsolutePath());
            OutputStream os = new FileOutputStream("images/"+kep.getName())){
        byte[] buffer = new byte[1024];
                int length;
                while ((length = is.read(buffer)) > 0) {
                    os.write(buffer, 0, length);
                }
            } catch (IOException ex){
            JOptionPane.showMessageDialog(rootPane, "Hiba a kép mentése közben", "Fájlhiba", JOptionPane.WARNING_MESSAGE);
        }
        hordozo.setKep("images/"+kep.getName());
        
        }

            

            setVisible(false);

    }//GEN-LAST:event_tbMentesActionPerformed

    private void btMegsemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMegsemActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btMegsemActionPerformed

    private void btFeltoltesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFeltoltesActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        kep = chooser.getSelectedFile();

        try {
            ImageIcon ujKep = new ImageIcon(scaleImage(180, 180, ImageIO.read(new File(kep.getAbsolutePath()))));//get the image from file chooser and scale it to match JLabel size
            lbKep.setIcon(ujKep);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Fájl hiba", "Figyelmeztetés", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btFeltoltesActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btFeltoltes;
    private javax.swing.JButton btMegsem;
    private javax.swing.JButton btUjGyarto;
    private javax.swing.JButton btUjMeret;
    private javax.swing.JButton btUjTipus;
    private javax.swing.JComboBox cbGyarto;
    private javax.swing.JComboBox cbMeret;
    private javax.swing.JComboBox cbTipus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lbKep;
    private javax.swing.JButton tbMentes;
    private javax.swing.JTextField tfMegjegyzes;
    private javax.swing.JTextField tfNev;
    // End of variables declaration//GEN-END:variables

    private void listaFrissit() {
        Session session = hibernate.HibernateUtil.getSessionFactory().openSession();
        hordozok = session.createQuery("FROM Hordozo").list();
        session.close();

        gyartokSet = new HashSet<>();
        meretekSet = new HashSet<>();
        tipusokSet = new HashSet<>();

        for (Hordozo h : hordozok) {

            meretekSet.add(h.getMeret());
            tipusokSet.add(h.getTipus());
            gyartokSet.add(h.getGyarto());

        }

        cbGyarto.setModel(new DefaultComboBoxModel(new ArrayList(gyartokSet).toArray()));
        cbMeret.setModel(new DefaultComboBoxModel(new ArrayList(meretekSet).toArray()));
        cbTipus.setModel(new DefaultComboBoxModel(new ArrayList(tipusokSet).toArray()));

    }

    public Hordozo getHordozo() {
        return hordozo;
    }

    public boolean isMentes() {
        return mentes;
    }

    public static BufferedImage scaleImage(int w, int h, BufferedImage img) throws Exception {
        BufferedImage bi;
        bi = new BufferedImage(w, h, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(img, 0, 0, w, h, null);
        g2d.dispose();
        return bi;
    }

}
